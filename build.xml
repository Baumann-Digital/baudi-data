<?xml version="1.0" encoding="UTF-8"?>
<project default="data-package" name="baudiData" basedir="." xmlns:unless="ant:unless">
    <dirname property="baudiData.basedir" file="${ant.file.baudiData}"/>
    
    <!-- import default properties from file -->
    <property file="${baudiData.basedir}/local.build.properties"/>
    <property file="${baudiData.basedir}/build.properties"/>
    <tstamp>
        <format property="release.date" pattern="yyyy-MM-dd"/>
    </tstamp>
    <tstamp>
        <format property="release.year" pattern="yyyy"/>
    </tstamp>
    <target name="clean-all">
        <delete dir="${build.dir}"/>
        <delete file="expath-pkg.xml"/>
        <delete file="repo.xml"/>
    </target>
    
    <target name="clean">
<!--        <delete dir="${build.dir}" includeemptydirs="true"/>-->
    </target>
    
    <target name="init" depends="get-current-hash-of-HEAD">
        <mkdir dir="${build.dir}"/>
    </target>
    
    <target name="get-current-hash-of-HEAD">
        <description>Get the hash of the current git HEAD</description>
        <exec executable="git" outputproperty="local.revision">
            <arg value="rev-parse"/>
            <arg value="--short"/>
            <arg value="HEAD"/>
        </exec>
        <echo>Current HEAD: ${local.revision}</echo>
    </target>
    
    <target name="data-package" depends="init">
        <echo>Creating expath-pkgf</echo>
        <copy file="expath-pkg.xml.tmpl" tofile="${build.dir}/expath-pkg.xml" filtering="true" overwrite="true">
            <filterset>
                <filter token="project.app" value="${project.app}"/>
                <filter token="project.name" value="${project.name}"/>
                <filter token="project.version" value="${project.version}-${local.revision}"/>
                <filter token="project.url" value="${project.url}"/>
            </filterset>
        </copy>
        <echo>Creating repo.xml</echo>
        <copy file="repo.xml.tmpl" tofile="${build.dir}/repo.xml" filtering="true" overwrite="true">
            <filterset>
                <filter token="data.target" value="${project.app}"/>
                <filter token="project.name" value="${project.name}"/>
            </filterset>
        </copy>
        <echo>Creating CITATION.cff</echo>
        <copy file="CITATION.cff.tmpl" tofile="${build.dir}/CITATION.cff" filtering="true" overwrite="true">
            <filterset>
                <filter token="project.app" value="${project.app}"/>
                <filter token="project.version" value="${project.version}"/>
                <filter token="release.date" value="${release.date}"/>
                <filter token="release.year" value="${release.year}"/>
            </filterset>
        </copy>
        <copy todir="${build.dir}">
            <fileset dir="${baudiData.basedir}">
              <include name="editions/"/>
              <include name="indices/"/>
                <include name="institutions/"/>
                <include name="loci/"/>
                <include name="persons/"/>
                <include name="sources/"/>
                <include name="texts/"/>
                <include name="works/"/>
              <include name="README.md"/>
              <exclude name="texts/documentation/"/>
              <exclude name="texts/textsAlt/"/>
            </fileset>
        </copy>
        <zip destfile="${dist.dir}/${project.app}-${project.version}-${local.revision}.xar">
            <fileset dir="${build.dir}">
                <include name="**/*.*"/>
                <exclude name="**/alt/"/>
                <exclude name="**/baudi-06-dummy.xml"/>
                <exclude name="**/.DS_Store"/>
            </fileset>
        </zip>
        <antcall target="clean"/>
    </target>
    
    <!-- Copy xar package to baudi-docker repo (autodeploy) -->
    <target name="update-baudi-docker" depends="data-package">
        <echo>Delete old packages</echo>
        <delete>
            <fileset dir="${baudiData.basedir}/../baudi-docker/autodeploy">
                <include name="${project.app}-*.xar"/>
            </fileset>
        </delete>
        <echo>Add new package</echo>
        <copy file="${dist.dir}/${project.app}-${project.version}-${local.revision}.xar" todir="${baudiData.basedir}/../baudi-docker/autodeploy" overwrite="yes"/>
    </target>
    
</project>
